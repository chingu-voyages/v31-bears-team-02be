{"version":3,"sources":["config/routes.js","components/routes/PublicRoute/PublicRoute.js","components/routes/PrivateRoute/PrivateRoute.js","components/TopNavBar/TopNavBar.js","components/Features/Features.js","components/Hero/Hero.js","components/HowTo/HowTo.js","components/HomePage/HomePage.js","components/NotFound/NotFound.js","components/Modal/Modal.js","components/Footer/Footer.js","components/Game/Art.js","components/Game/Timer.js","components/Game/RoundCounter.js","components/Game/ChoiceButton.js","components/Game/GameUI.js","components/Game/ArtInfoDialog.js","components/Game/GameOver.js","components/Game/Game.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["USERHOME","PublicRoute","Component","component","isAuthenticated","rest","render","props","to","PrivateRoute","TopNavBar","onLogin","setModalOpen","modalOpen","className","type","onClick","Features","alt","src","Hero","React","backgroundImg","setBackgroundImg","bigImgLoaded","setBigImgLoaded","imgSmall","Image","onload","imgBig","HowTo","HomePage","NotFound","Modal","children","createPortal","document","getElementById","Footer","href","Art","art","correctArt","console","log","primaryImageSmall","artistDisplayName","Timer","timer","RoundCounter","roundCounter","ChoiceButton","artistName","handleClick","value","GameUI","setAnswerChosen","setRoundCounter","roundArt","answerChosen","setArt","roundHistory","setRoundHistory","useState","setTimer","useEffect","timerInterval","incrementTimer","setInterval","clearInterval","newRoundHistory","e","target","answer","artButtons","map","index","ArtInfoDialog","artInfo","setCorrectArt","setGameOver","title","artistBeginDate","artistEndDate","objectDate","objectURL","rel","round","GameOver","filter","x","length","window","location","reload","Game","setRoundArt","gameOver","a","fetch","res","json","data","objectIds","i","objectID","objectIDs","splice","Math","floor","random","push","Promise","all","id","randomArt","artFetch","newRoundArt","slice","join","App","setIsAuthenticated","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.483cce5c.chunk.js","sourcesContent":["export const HOME = '/';\n// TODO: Assign correct route for signed up users\nexport const USERHOME = '/user/:userId';\n","/* eslint-disable react/jsx-props-no-spreading */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\nimport { USERHOME } from '../../../config/routes';\n\nconst PublicRoute = ({ component: Component, isAuthenticated, ...rest }) => (\n  <Route\n    {...rest}\n    // TODO: Review redirect for user on sign in\n    render={(props) => (isAuthenticated ? <Redirect to={USERHOME} /> : <Component {...props} />)}\n  />\n);\n\nPublicRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.object, PropTypes.element, PropTypes.func]).isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n};\n\nexport default PublicRoute;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\nimport { HOME } from '../../../config/routes';\n\nconst PrivateRoute = ({ component: Component, isAuthenticated, ...rest }) => (\n  <Route\n    {...rest}\n    // TODO: Review redirect for non-signed users\n    render={(props) => (isAuthenticated ? <Component {...props} /> : <Redirect to={HOME} />)}\n  />\n);\n\nPrivateRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.object, PropTypes.element, PropTypes.func]).isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n};\n\nexport default PrivateRoute;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./TopNavBar.css\";\nimport { Link } from \"react-router-dom\";\n\nconst TopNavBar = ({ onLogin, isAuthenticated, modalOpen, setModalOpen }) => (\n  <header className=\"top-nav-header\">\n    <h2>\n      <Link to=\"/\">ArtGuessr</Link>\n    </h2>\n    <nav>\n      {isAuthenticated ? (\n        <ul>\n          <li>\n            <Link to=\"/game\">Play</Link>\n          </li>\n          <li>\n            <h3>Username</h3>\n          </li>\n          <li>\n            <button type=\"button\" onClick={() => onLogin(false)}>\n              Sign Out\n            </button>\n          </li>\n        </ul>\n      ) : (\n        <ul>\n          <li>\n            <Link to=\"/game\">Play</Link>\n          </li>\n          <li>\n            <button\n              type=\"button\"\n              onClick={() => {\n                setModalOpen(true);\n              }}\n            >\n              Sign Up\n            </button>\n          </li>\n          <li>\n            <button type=\"button\" onClick={() => onLogin(true)}>\n              Sign in\n            </button>\n          </li>\n        </ul>\n      )}\n    </nav>\n  </header>\n);\n\nTopNavBar.propTypes = {\n  onLogin: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  modalOpen: PropTypes.bool.isRequired,\n  setModalOpen: PropTypes.func.isRequired,\n};\n\nexport default TopNavBar;\n","import * as React from 'react';\nimport './Features.css';\n\nconst Features = () => (\n  <section className=\"features\">\n    <h2>Are you ready to be an art explorer?</h2>\n    <div className=\"features-cards-wrapper\">\n      {/* Each feature section can have a 'painting' image that ilustrates each feature */}\n      <section>\n        <h3>Play</h3>\n        <figure>\n          <img alt=\"placeholder\" src=\"http://via.placeholder.com/250x250\" />\n          <figcaption>\n            Each artwork is a puzzle to be solved.\n            Can you guess who created it, or when?\n            Simply hit play for a quick round or create an account\n            and keep track of your score.\n          </figcaption>\n        </figure>\n      </section>\n      <section>\n        <h3>Explore</h3>\n        <figure>\n          <img alt=\"placeholder\" src=\"http://via.placeholder.com/300x185\" />\n          <figcaption>\n            Thousands of art pieces and artifacts are waiting for you to discover them.\n            Play and let the game surprise you with artworks to identify,\n            or take your own route by looking through information about the\n            artifacts and artists that you like.\n          </figcaption>\n        </figure>\n      </section>\n      <section>\n        <h3>Learn</h3>\n        <figure>\n\n          <img alt=\"placeholder\" src=\"http://via.placeholder.com/250x300\" />\n          <figcaption>\n            Study every detail, get to know new artists,\n            and learn new things about the ones you know.\n            Play again and show the knowledge you&apos;ve gathered and get higher scores.\n            Share your discoveries with friends and family.\n          </figcaption>\n        </figure>\n\n      </section>\n      {/* Another feature can be added here if leaderboards are implemented */}\n    </div>\n  </section>\n);\n\nexport default Features;\n","import * as React from 'react';\nimport './Hero.css';\n\nconst Hero = () => {\n  const [backgroundImg, setBackgroundImg] = React.useState(null);\n  const [bigImgLoaded, setBigImgLoaded] = React.useState(false);\n\n  /* Adding an experiment as a proof of concept for loading\n  and exploring hd images provided by api */\n\n  // Load hero background image on component count\n  React.useEffect(() => {\n    // When small image loads it will be used for the hero background\n    const imgSmall = new Image();\n    imgSmall.src = 'https://images.metmuseum.org/CRDImages/ep/web-large/DT1567.jpg';\n    imgSmall.onload = () => setBackgroundImg(imgSmall);\n\n    // When the larger image loads it will replace the small one and set class to animate\n    const imgBig = new Image();\n    imgBig.src = 'https://images.metmuseum.org/CRDImages/ep/original/DT1567.jpg';\n    imgBig.onload = () => {\n      setBackgroundImg(imgBig);\n      setBigImgLoaded(true);\n    };\n  }, []);\n\n  return (\n    <section className=\"hero\">\n      <div className={`centered frame ${bigImgLoaded ? 'animate' : ''}`}>\n        {backgroundImg && (\n          <img src={backgroundImg.src} alt=\"test\" />\n        )}\n        <div className=\"hero-caption\">\n          <h1>Art lovers wanted!</h1>\n          <p>\n            Join our community of art explorers and participate to put your\n            knowledge to the test. Will you accept the challenge? You can play\n            right away, and if you want to save your score you can sign up and\n            create an account. Let&apos;s get art-guessing!\n          </p>\n          <button type=\"button\">Let&apos;s Play</button>\n          <button type=\"button\">Sign up</button>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Hero;\n","import * as React from 'react';\nimport './HowTo.css';\n\nconst HowTo = () => (\n  <section className=\"how-to-play\">\n    <h2>How to play:</h2>\n    <section>\n      <ul>\n        <li>\n          Each game consists of ten rounds.\n        </li>\n        <li>\n          Each round you will be shown an artwork or artifact.\n        </li>\n        <li>\n          You will be asked to guess the date or artist for each art piece.\n        </li>\n        <li>\n          You will have multiple choices displayed to you to select as an answer.\n        </li>\n        <li>\n          You have to answer within the time limit.\n        </li>\n        <li>\n          Each correct answer will be added to your score.\n        </li>\n        <li>\n          After each answer,\n          you can take your time to explore\n          the artwork in detail and go through\n          its information before continuing to the next guessing round.\n        </li>\n      </ul>\n      <img alt=\"placeholder\" src=\"http://via.placeholder.com/640x360\" />\n    </section>\n  </section>\n);\n\nexport default HowTo;\n","import * as React from 'react';\nimport Features from '../Features/Features';\nimport Hero from '../Hero/Hero';\nimport HowTo from '../HowTo';\n\nconst HomePage = () => (\n  <article className=\"home\">\n    <Hero />\n    <Features />\n    <HowTo />\n  </article>\n);\n\nexport default HomePage;\n","import * as React from 'react';\n\nconst NotFound = () => (<h2>Not Found</h2>);\n\nexport default NotFound;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport './Modal.css';\n\nconst Modal = ({ children, modalOpen, setModalOpen }) => {\n  if (!modalOpen) return null;\n  return createPortal(\n    <div className=\"modal-overlay\">\n      <article className=\"modal\">\n        <button type=\"button\" onClick={(() => setModalOpen(false))}>Close</button>\n        {children}\n      </article>\n    </div>,\n    document.getElementById('portal'),\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.element, PropTypes.func]).isRequired,\n  modalOpen: PropTypes.bool.isRequired,\n  setModalOpen: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import * as React from 'react';\n\nconst Footer = () => (\n  <footer>\n    <h2>Contact Us</h2>\n\n    <p>\n      Made as part of\n      {' '}\n      <a href=\"https://chingu.io\">Chingu&apos;s </a>\n      {' '}\n      31st voyage.\n    </p>\n    <p>Our team:</p>\n    <ul>\n      <li>Jim</li>\n      <li>Anjana</li>\n      <li>Kapre</li>\n      <li>Ken</li>\n      <li>Max</li>\n      <li>Michael</li>\n      <li>Joel</li>\n    </ul>\n    <p>\n      © Chingu v31 bears-team-02\n    </p>\n  </footer>\n);\n\nexport default Footer;\n","function Art({ art, correctArt }) {\n  console.log(\"correctArt: \", correctArt);\n  console.log(art);\n\n  return (\n    <div className=\"art-container\">\n      <img src={correctArt.primaryImageSmall} alt=\"art file\" />\n      <p>{correctArt.artistDisplayName}</p>\n    </div>\n  );\n}\n\nexport default Art;\n","const Timer = ({ timer }) => {\n  return <p>timer: {timer}</p>;\n};\n\nexport default Timer;\n","const RoundCounter = ({ roundCounter }) => {\n  return <div>Round Counter: {roundCounter}</div>;\n};\n\nexport default RoundCounter;\n","const ChoiceButton = ({ artistName, handleClick }) => {\n  return <input type=\"button\" onClick={handleClick} value={artistName}></input>;\n};\n\nexport default ChoiceButton;\n","import Timer from \"./Timer\";\nimport RoundCounter from \"./RoundCounter\";\nimport ChoiceButton from \"./ChoiceButton\";\nimport { useEffect, useState } from \"react\";\nconst GameUI = ({\n  correctArt,\n  roundCounter,\n  setRoundCounter,\n  setAnswerChosen,\n  answerChosen,\n  setArt,\n  roundArt,\n  roundHistory,\n  setRoundHistory,\n}) => {\n  const [timer, setTimer] = useState(10);\n\n  useEffect(() => {\n    let timerInterval;\n    function startTimer() {\n      timerInterval = setInterval(incrementTimer, 1000);\n    }\n\n    function incrementTimer() {\n      setTimer((timer) => timer - 1);\n    }\n\n    startTimer();\n\n    function endTimer() {\n      clearInterval(timerInterval);\n      setTimer(0);\n    }\n\n    return () => {\n      endTimer();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (timer === 0) {\n      setAnswerChosen(true);\n      const newRoundHistory = [...roundHistory];\n      newRoundHistory[roundCounter - 1] = \"❌\";\n      setRoundHistory(newRoundHistory);\n    }\n  }, [timer, setAnswerChosen]);\n\n  const handleClick = (e) => {\n    if (e.target.value === correctArt.artistDisplayName) {\n      console.log(\"correct!\", e.target.value);\n\n      // replace roundHistory[roundCounter] with 'correct'\n      const newRoundHistory = [...roundHistory];\n      newRoundHistory[roundCounter - 1] = \"✔\";\n      setRoundHistory(newRoundHistory);\n    } else {\n      console.log(\"wrong!\", e.target.value);\n      // replace roundHistory[roundCounter] with 'wrong'\n      const newRoundHistory = [...roundHistory];\n      newRoundHistory[roundCounter - 1] = \"❌\";\n      setRoundHistory(newRoundHistory);\n    }\n    setAnswerChosen((answer) => !answer);\n  };\n\n  const artButtons = roundArt.map((art, index) => {\n    return (\n      <ChoiceButton\n        key={art.artistDisplayName + index}\n        artistName={art.artistDisplayName}\n        handleClick={handleClick}\n      />\n    );\n  });\n\n  return (\n    <div className=\"gameui-container\">\n      <Timer timer={timer}></Timer>\n      <div className=\"multiple-choice\">{artButtons}</div>\n      <RoundCounter roundCounter={roundCounter}></RoundCounter>\n    </div>\n  );\n};\n\nexport default GameUI;\n","const ArtInfoDialog = ({\n  setRoundCounter,\n  setAnswerChosen,\n  artInfo,\n  setArt,\n  setCorrectArt,\n  setGameOver,\n  roundCounter,\n}) => {\n  function handleClick(e) {\n    setRoundCounter((round) => round + 1);\n    setAnswerChosen(false);\n    setCorrectArt(null);\n    if (roundCounter === 10) {\n      setGameOver(true);\n    }\n  }\n  return (\n    <>\n      Art info Dialog\n      <ul>\n        <li>Title: {artInfo.title}</li>\n\n        <li>\n          Artist: {artInfo.artistDisplayName} ({artInfo.artistBeginDate} -\n          {artInfo.artistEndDate})\n        </li>\n\n        {artInfo.objectDate && <li>Date: {artInfo.objectDate}</li>}\n\n        <li>\n          <a href={artInfo.objectURL} rel=\"noreferrer\" target=\"_blank\">\n            More info\n          </a>\n        </li>\n      </ul>\n      <button onClick={handleClick}>next</button>\n    </>\n  );\n};\n\nexport default ArtInfoDialog;\n","const GameOver = ({ roundHistory }) => {\n  function reloadPage() {\n    window.location.reload();\n  }\n\n  return (\n    <>\n      <h3>Game Over</h3>\n      <h3>Total Correct: {roundHistory.filter((x) => x === \"✔\").length}</h3>\n      <button onClick={reloadPage}>Play again</button>\n    </>\n  );\n};\n\nexport default GameOver;\n","import { useEffect, useState } from \"react\";\nimport Art from \"./Art\";\nimport \"./Game.css\";\nimport GameUI from \"./GameUI\";\nimport ArtInfoDialog from \"./ArtInfoDialog\";\nimport GameOver from \"./GameOver\";\n\nconst Game = () => {\n  const [art, setArt] = useState(null);\n  const [correctArt, setCorrectArt] = useState(null);\n  const [roundCounter, setRoundCounter] = useState(0);\n  const [answerChosen, setAnswerChosen] = useState(false);\n  const [roundArt, setRoundArt] = useState(null);\n  const [roundHistory, setRoundHistory] = useState([\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n  ]);\n  const [gameOver, setGameOver] = useState(false);\n\n  useEffect(() => {\n    const url =\n      \"https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&departmentId=11&q=painting\";\n    const artFetch = async () => {\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data);\n      const objectIds = [];\n\n      for (let i = 0; i < 40; i++) {\n        // makes sure all object ids are unique\n        const objectID = data.objectIDs.splice(\n          Math.floor(Math.random() * data.objectIDs.length),\n          1\n        )[0];\n        objectIds.push(objectID);\n      }\n      console.log(\"objectIds:\", objectIds);\n\n      const randomArt = await Promise.all(\n        objectIds.map(async (id) => {\n          const res = await fetch(\n            `https://collectionapi.metmuseum.org/public/collection/v1/objects/${id}`\n          );\n          const data = await res.json();\n          return data;\n        })\n      );\n\n      setArt(randomArt);\n      setRoundCounter(1);\n    };\n    artFetch();\n  }, []);\n\n  useEffect(() => {\n    if (art) {\n      if (art.length === 0) console.log(\"game over\");\n      const newRoundArt = art.slice(0, 4);\n      setRoundArt(newRoundArt);\n      setArt((art) => art.slice(4));\n      setCorrectArt(newRoundArt[Math.floor(Math.random() * 4)]);\n    }\n  }, [roundCounter]);\n\n  if (gameOver) {\n    return (\n      <div className=\"game-screen\">\n        <GameOver roundHistory={roundHistory} />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"game-screen\">\n      {roundArt && correctArt && <Art correctArt={correctArt} art={art} />}\n      {roundArt &&\n        art &&\n        (answerChosen ? (\n          <ArtInfoDialog\n            setAnswerChosen={setAnswerChosen}\n            setRoundCounter={setRoundCounter}\n            artInfo={correctArt}\n            setCorrectArt={setCorrectArt}\n            setGameOver={setGameOver}\n            roundCounter={roundCounter}\n          />\n        ) : (\n          <GameUI\n            correctArt={correctArt}\n            roundArt={roundArt}\n            roundCounter={roundCounter}\n            setRoundCounter={setRoundCounter}\n            setAnswerChosen={setAnswerChosen}\n            answerChosen={answerChosen}\n            roundHistory={roundHistory}\n            setRoundHistory={setRoundHistory}\n          />\n        ))}\n      {art && <div>{roundHistory.join(\" - \")}</div>}\n    </div>\n  );\n};\n\nexport default Game;\n","import * as React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n// Using a 'routes' file as single source of truth for route strings\nimport { HOME, USERHOME } from \"../../config/routes\";\n// Wrapper components to handle redirects and access to routes that need auth\nimport { PrivateRoute, PublicRoute } from \"../routes\";\nimport TopNavBar from \"../TopNavBar\";\nimport HomePage from \"../HomePage\";\n// 404 page\nimport NotFound from \"../NotFound\";\nimport Modal from \"../Modal/Modal\";\nimport \"./App.css\";\nimport Footer from \"../Footer/Footer\";\nimport Game from \"../Game/Game\";\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = React.useState(false);\n  const [modalOpen, setModalOpen] = React.useState(false);\n\n  return (\n    <div className=\"App\">\n      <TopNavBar\n        onLogin={setIsAuthenticated}\n        isAuthenticated={isAuthenticated}\n        setModalOpen={setModalOpen}\n        modalOpen={modalOpen}\n      />\n      <Switch>\n        <PublicRoute\n          exact\n          path={HOME}\n          component={HomePage}\n          isAuthenticated={isAuthenticated}\n        />\n        <PrivateRoute\n          exact\n          path={USERHOME}\n          component={HomePage}\n          isAuthenticated={isAuthenticated}\n        />\n        <Route path=\"/game\" component={Game} />\n        <PrivateRoute\n          path=\"*\"\n          component={NotFound}\n          isAuthenticated={isAuthenticated}\n        />\n      </Switch>\n      <Footer />\n      <Modal modalOpen={modalOpen} setModalOpen={setModalOpen}>\n        <h2>Sign up</h2>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}